plugins {
	id 'java'
	id 'maven-publish'
	id 'com.pocolifo.jarremapper.devplugin' version '1.0-SNAPSHOT'
}

group 'com.pocolifo'
version '2.0.0'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.ow2.asm:asm-commons:9.2'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
	useJUnitPlatform()
}

// jarremapper-dev plugin extension
// - downloads mappings
// - downloads input jars
// - automatically generates tests base on readers, engines, mappings, and input jars
jarremapper {
	// how to use the jarremapper extension:

	// mappings to use.
	// mcp format: mcp/<channel>/<minecraft version>/<mappings version>
	// yarn (legacyfabric & fabric) format: <(legacyfabric|fabric)>/<minecraft version>/<build id>
	mappings = [
			// mcp
			'mcp/stable/1.8.9/22',

			// legacyfabric
			'legacyfabric/1.8.9/202112162000',

			// fabric
			'fabric/1.18.1/1'
	]

	// minecraft binaries to use.
	// format: <(client|server)>/<minecraft version>/<binary hash>
	minecraft = ['client/1.8.9/3870888a6c3d349d3771a3e9d16c9bf5e076b908',
				 'client/1.18.1/7e46fb47609401970e2818989fa584fd467cd036']

	// mapping readers to generate tests for.
	// format: <canonical path of reader class>/<how to obtain a JarMapping>/<mappings this applies to>(+<more mappings>+...): [<files required for constructing>]
	readers = ['com.pocolifo.jarremapper.reader.mcp.McpMappingReader/.read()/mcp': ['joined.srg', 'joined.exc', 'methods.csv', 'fields.csv', 'params.csv'],
			   'com.pocolifo.jarremapper.reader.tiny.Tiny1MappingReader/.read(\"official\", \"named\")/fabric+legacyfabric': ['mappings.tiny'],
			   'com.pocolifo.jarremapper.reader.tiny.Tiny2MappingReader/.read(\"official\", \"named\")/fabric+legacyfabric': ['mappings-merged.tiny']]

	// remapping engines to generate tests for.
	// format: <canonical name of engine>/<how to obtain an AbstractRemappingEngine>
	engines = [
            // all StandardRemappingEngine options
			'com.pocolifo.jarremapper.engine.standard.StandardRemappingEngine/new StandardRemappingEngine()',
			'com.pocolifo.jarremapper.engine.standard.StandardRemappingEngine/new StandardRemappingEngine().excludeMetaInf()',
			'com.pocolifo.jarremapper.engine.standard.StandardRemappingEngine/new StandardRemappingEngine().setRemappingPlugin(new com.pocolifo.jarremapper.SimpleProgressListener())',
			'com.pocolifo.jarremapper.engine.standard.StandardRemappingEngine/new StandardRemappingEngine().setRemappingPlugin(new com.pocolifo.jarremapper.SimpleProgressListener()).excludeMetaInf()'
	]
}

publishing {
	publications {
		maven(MavenPublication) {
			pom {
				name = 'JAR Remapper'
				description = 'Library for remapping JARs'
				artifactId = 'jarremapper'

				licenses {
					license {
						name = 'Mozilla Public License 2.0'
						url = 'https://www.mozilla.org/en-US/MPL/2.0/'
					}
				}

				developers {
					developer {
						id = 'youngermax'
					}
				}
			}

			from components['java']
		}
	}

	repositories {
		maven {
			url System.getenv("REPO_URL")
			name 'pocolifo'

			credentials {
				username = System.getenv("REPO_USERNAME")
				password = System.getenv("REPO_PASSWORD")
			}

			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}
